version: '3.8'

services:
  backend:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - mailhog

  celery_worker:
    build: .
    entrypoint: []
    command: >
      sh -c "echo 'Waiting for PostgreSQL to start...' &&
             while ! nc -z $$DB_HOST $$DB_PORT; do sleep 0.1; done &&
             echo 'PostgreSQL started' &&
             echo 'Starting Celery worker...' &&
             celery -A streaming_platform worker --loglevel=info"
    volumes:
      - .:/app
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
    env_file:
      - .env
    depends_on:
      - db
      - redis

  celery_beat:
    build: .
    entrypoint: []
    command: >
      sh -c "echo 'Waiting for PostgreSQL to start...' &&
             while ! nc -z $$DB_HOST $$DB_PORT; do sleep 0.1; done &&
             echo 'PostgreSQL started' &&
             echo 'Starting Celery beat...' &&
             celery -A streaming_platform beat --loglevel=info"
    volumes:
      - .:/app
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
    env_file:
      - .env
    depends_on:
      - db
      - redis

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    environment:
      - MH_STORAGE=memory
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
